"use client";

/**
 * LazyHello
 * Magyar: K√©sleltetve bet√∂lt≈ëd≈ë apr√≥ komponens, a k√≥dszeletel√©s bemutat√°s√°ra.
 * - Szimul√°l egy r√∂vid k√©sleltet√©st, majd ki√≠r egy r√∂vid sz√∂veget.
 */
export default function LazyHello() {
  return (
    <Delayed ms={600}>
      <span className="text-sm text-muted-foreground">Szia! Ez egy lusta komponens. üëã</span>
    </Delayed>
  );
}

/**
 * Delayed
 * Magyar: Egyszer≈± seg√©d komponens, amely a children-t csak egy r√∂vid k√©sleltet√©s ut√°n jelen√≠ti meg.
 */
function Delayed(props: { ms?: number; children?: any }) {
  const { ms = 600, children } = props;
  const [ready] = useDelay(ms);
  if (!ready) return null;
  return children ?? null;
}

/**
 * useDelay
 * Magyar: Visszaad egy boolean √°llapotot, amely a megadott k√©sleltet√©s ut√°n true-ra v√°lt.
 */
function useDelay(ms: number): [boolean] {
  // Lok√°lis React hivatkoz√°s @types/react n√©lk√ºl.
  const ReactRef: any = (globalThis as any).React || require("react");
  const useEffect: any = ReactRef.useEffect;
  const useState: any = ReactRef.useState;

  const [ready, setReady] = useState(false);
  useEffect(() => {
    const t = setTimeout(() => setReady(true), ms);
    return () => clearTimeout(t);
  }, [ms]);
  return [ready];
}